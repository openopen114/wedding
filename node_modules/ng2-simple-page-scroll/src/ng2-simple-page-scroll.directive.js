import { Directive, Input, Output, EventEmitter } from '@angular/core';
import { Router, NavigationEnd, NavigationError, NavigationCancel } from '@angular/router';
import { SimplePageScrollService } from './ng2-simple-page-scroll.service';
export var SimplePageScroll = (function () {
    function SimplePageScroll(router, simplePageScrollService) {
        this.router = router;
        this.simplePageScrollService = simplePageScrollService;
        this.pageScrollOffset = null;
        this.pageScrollFinish = new EventEmitter();
        this.shouldScroll = false;
    }
    SimplePageScroll.prototype.handleClick = function (clickEvent) {
        var _this = this;
        if (this.routerLink && this.router !== null && this.router !== undefined) {
            // wait for router to finish navigating
            // Note: the change event is also emitted when navigating to the current route again
            var subscription_1 = this.router.events.subscribe(function (routerEvent) {
                if (routerEvent instanceof NavigationEnd) {
                    subscription_1.unsubscribe();
                    _this.shouldScroll = true;
                }
                else if (routerEvent instanceof NavigationError || routerEvent instanceof NavigationCancel) {
                    subscription_1.unsubscribe();
                    _this.pageScrollFinish.emit(false);
                }
            });
        }
        else {
            // no router action; scroll immediately
            this.scrollAndEmitEvent();
        }
        return false; // to preventDefault()
    };
    SimplePageScroll.prototype.scrollAndEmitEvent = function () {
        this.simplePageScrollService.scrollToElement(this.href, this.pageScrollOffset);
        this.shouldScroll = false;
        this.pageScrollFinish.emit(true);
    };
    SimplePageScroll.prototype.ngAfterViewChecked = function () {
        if (this.shouldScroll) {
            this.scrollAndEmitEvent();
        }
    };
    SimplePageScroll.decorators = [
        { type: Directive, args: [{
                    selector: '[simplePageScroll]',
                    host: {
                        '(click)': 'handleClick($event)',
                    }
                },] },
    ];
    /** @nocollapse */
    SimplePageScroll.ctorParameters = [
        { type: Router, },
        { type: SimplePageScrollService, },
    ];
    SimplePageScroll.propDecorators = {
        'routerLink': [{ type: Input },],
        'href': [{ type: Input },],
        'pageScrollOffset': [{ type: Input },],
        'pageScrollFinish': [{ type: Output },],
    };
    return SimplePageScroll;
}());
//# sourceMappingURL=ng2-simple-page-scroll.directive.js.map